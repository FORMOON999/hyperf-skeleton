<?php

declare(strict_types=1);

namespace %NAMESPACE%;

%USES%
class %CLASS% implements %INHERITANCE%
{

    public function __construct(protected %MODEL% $%MODEL_NAME%)
    {

    }

    public function getList(array $search, array $field = ['*'], array $withs = [], array $sort = [], array $page = []): Output
    {
        $query = $this->%MODEL_NAME%->buildQuery($search, $sort)->select($field);
        if (! empty($withs)) {
            $query->with(...$withs);
        }
        return $this->%MODEL_NAME%->output($query, $page);
    }

    public function create(array $data): int|string
    {
        $model = clone $this->%MODEL_NAME%;
        $model->fill($data);
        $ret = $model->save();
        return $ret ? $model->getKey() : 0;
    }

    public function modify(array $search, array $data): int
    {
        return $this->%MODEL_NAME%->buildQuery($search)->update($data);
    }

    public function remove(array $search): int
    {
        return $this->%MODEL_NAME%->buildQuery($search)->delete();
    }

    public function detail(array $search, array $field = ['*'], array $withs = [], array $sort = []): ?%MODEL_NAME_ENTITY%
    {
        $query = $this->%MODEL_NAME%->buildQuery($search, $sort)->select($field);
        if (! empty($withs)) {
            $query->with(...$withs);
        }
        return $query->first()?->newEntity();
    }
}
